name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Branche principale à surveiller pour le déploiement
  pull_request:
    branches:
      - main  # Déclencheur lors d'une PR vers la branche principale

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      run: |
        docker build -t simple_site .
    
    - name: Save Docker image as artifact
      uses: actions/upload-artifact@v3
      with:
        name: nginx-image
        path: ./simple_site.dockerfile  # Remplacez ceci par le bon chemin de votre image Docker

  test:
    runs-on: ubuntu-latest
    needs: build  # Ce job dépend du job "build"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        npm install  # Installe les dépendances dans le répertoire de travail, vérifiez si le package.json est présent

    - name: Run tests
      run: |
        npm test  # Lance vos tests si vous en avez

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ce job dépend du job "test"
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  # Utilisez votre clé privée SSH stockée dans les secrets GitHub

    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no user@your-server-ip "cd /path/to/project && git pull origin main && docker-compose up -d"
      env:
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
